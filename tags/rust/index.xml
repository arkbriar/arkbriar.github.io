<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rust on 石沉溪洞 -- Ark&#39;s Blog</title>
    <link>https://blog.crazyark.me/tags/rust/</link>
    <description>Recent content in rust on 石沉溪洞 -- Ark&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 14 Sep 2021 08:37:50 +0800</lastBuildDate><atom:link href="https://blog.crazyark.me/tags/rust/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>代码杂谈：结构化并发</title>
      <link>https://blog.crazyark.me/p/structured-concurrency/</link>
      <pubDate>Tue, 14 Sep 2021 08:37:50 +0800</pubDate>
      
      <guid>https://blog.crazyark.me/p/structured-concurrency/</guid>
      <description>最近阅读的几篇文章都是围绕着编程来的。在我看来，编程语言/模型/抽象的一大重要目的是在保证核心功能和性能的基础上，让开发人员更容易地开发出不</description>
    </item>
    
    <item>
      <title>代码杂谈：协程</title>
      <link>https://blog.crazyark.me/p/coroutines-rust-and-go/</link>
      <pubDate>Thu, 09 Sep 2021 00:37:00 +0800</pubDate>
      
      <guid>https://blog.crazyark.me/p/coroutines-rust-and-go/</guid>
      <description>协程是对子程序（subroutine）的一种扩展，它允许执行流程被挂起和恢复 [1]。 随着越来越多的编程语言的支持，协程这个概念也被更多的人所</description>
    </item>
    
  </channel>
</rss>
