<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sort on crazy.ark</title>
    <link>https://blog.crazyark.me/tags/sort/</link>
    <description>Recent content in Sort on crazy.ark</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 04 Aug 2017 14:15:35 +0800</lastBuildDate>
    
	<atom:link href="https://blog.crazyark.me/tags/sort/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>优化比较次数的排序算法 (Ford Johnson Algorithm)</title>
      <link>https://blog.crazyark.me/posts/ford_johnson_algorithm/</link>
      <pubDate>Fri, 04 Aug 2017 14:15:35 +0800</pubDate>
      
      <guid>https://blog.crazyark.me/posts/ford_johnson_algorithm/</guid>
      <description>&lt;p&gt;偶然发现 AtCoder，上去注册了准备试试，结果卡在practice contest&amp;hellip;&lt;/p&gt;

&lt;p&gt;问题倒是很简单：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There are N balls labeled with the first N uppercase letters. The balls have pairwise distinct weights.
You are allowed to ask at most Q queries. In each query, you can compare the weights of two balls (see Input/Output section for details).
Sort the balls in the ascending order of their weights.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Constraints&lt;/strong&gt;
(N,Q)=(26,1000), (26,100), or (5,7).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Partial Score&lt;/strong&gt;
There are three testsets. Each testset is worth 100 points.
In testset 1, N=26 and Q=1000.
In testset 2, N=26 and Q=100.
In testset 3, N=5 and Q=7.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;通过比较排序，一共三种数据，其中 (26, 1000) 的情况用任何比较都能过，但是可能会 TLE，(26, 100) 的用 worst-case &lt;code&gt;$O(nlgn)$&lt;/code&gt; 的 merge sort 能过，唯一难受的是 (5, 7)。这个样例 merge sort 的 worst case 是比较8次。&lt;/p&gt;

&lt;p&gt;我和某网友一样，尝试用 STL 的 sort 来解决，结果发现 WA 了更多 🙄&lt;/p&gt;

&lt;p&gt;You must be kidding!&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>